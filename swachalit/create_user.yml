---

- hosts: create_user # this is the remote system ip, need to be replaced

  sudo: yes
  #remote_user: dk
  tasks:
# Setup {{ new_user }} user for running tasks

  - name: "Create hell_cat group"
    group: >
      name="hell_cat_group"
      state="present"

  - name: "Create hell_cat user - 'hell_cat_user'"
    user: >
      name="hell_cat_user"
      group="hell_cat_group"
      home="/home/hell_cat"
      createhome=yes
      move_home=yes
      comment="hell_cat user"
      shell="/bin/bash"
      state="present"  

  - name: "Create directory /etc/sudoers.d"
    file: >
      path="/etc/sudoers.d"
      state="directory"
      owner="root"
      group="root"
      mode=0755  

  - name: "Include /etc/sudoers.d in sudoers file"
    lineinfile: >
      dest="/etc/sudoers"
      line="#includedir /etc/sudoers.d"
      state="present"
      validate='/usr/sbin/visudo -cf %s'  

  - name: "Remove requiretty in /etc/sudoers"
    lineinfile: >
      dest="/etc/sudoers"
      regexp="^\s*Defaults\s*requiretty"
      state="absent"
      validate='/usr/sbin/visudo -cf %s'  

  - name: "Grant sudo permission (full access)"
    template: >
      src="sudoers_file.j2"
      dest="/etc/sudoers.d/{{ hell_cat_user"
      owner="root"
      group="root"
      mode="0400"  

  - name: "Ensure home directory ownership is correct"
    file: >
      path="hell_cat_home"
      owner="hell_cat_user"
      group="hell_cat_group"
      state="directory"  

  - name: "Create .ssh directory"
    file: >
      path="hell_cat_home/.ssh"
      owner="hell_cat_user"
      group="hell_cat_group"
      mode="0700"
      state="directory"  

  # - name: "Setup key based ssh login"
  #   copy: >
  #     src="authorized_keys"
  #     dest="hell_cat_home/.ssh/authorized_keys"
  #     owner="hell_cat_user"
  #     group="hell_cat_group"
  #     mode="0600"  

  # - name: "Setup hell_cat public key"
  #   copy: >
  #     src="hell_cat_home/.ssh/id_rsa.pub"
  #     dest="hell_cat_home/.ssh/id_rsa.pub"
  #     owner="hell_cat_user"
  #     group="hell_cat_group"
  #     mode="0600"
  #   when: "(not {{ is_localhost }}) and (('{{inventory_hostname}}' in {{groups['hell_cat'] | default([])}}) or ('{{inventory_hostname}}' in {{groups['salt-master'] | default([])}}))"  

  # - name: "Setup hell_cat private key"
  #   copy: >
  #     src="{{ hell_cat_home }}/.ssh/id_rsa"
  #     dest="{{ hell_cat_home }}/.ssh/id_rsa"
  #     owner="{{ hell_cat_user }}"
  #     group="{{ hell_cat_group }}"
  #     mode="0600"
  #   when: "(not {{ is_localhost }}) and (('{{inventory_hostname}}' in {{groups['hell_cat'] | default([])}}) or ('{{inventory_hostname}}' in {{groups['salt-master'] | default([])}}))"  

  # - name: "Setup hell_cat ssh config"
  #   copy: >
  #     src="config"
  #     dest="{{ hell_cat_home }}/.ssh/config"
  #     owner="{{ hell_cat_user }}"
  #     group="{{ hell_cat_group }}"
  #     mode="0600"
  #   when: "('{{ inventory_hostname }}' in {{ groups['hell_cat'] | default([]) }}) or ('{{inventory_hostname}}' in {{groups['salt-master'] | default([])}})"  

  # - name: "Delete hell_cat public key, if it is not a hell_cat host"
  #   file: >
  #     path="{{ hell_cat_home }}/.ssh/id_rsa.pub"
  #     state="absent"
  #   when: "(not {{ is_localhost }}) and ('{{inventory_hostname}}' not in {{groups['hell_cat'] | default([])}}) and ('{{inventory_hostname}}' not in {{groups['salt-master'] | default([])}})"  

  # - name: "Delete hell_cat private key, if it is not a hell_cat host"
  #   file: >
  #     path="{{ hell_cat_home }}/.ssh/id_rsa"
  #     state="absent"
  #   when: "(not {{ is_localhost }}) and ('{{inventory_hostname}}' not in {{groups['hell_cat'] | default([])}}) and ('{{inventory_hostname}}' not in {{groups['salt-master'] | default([])}})"
